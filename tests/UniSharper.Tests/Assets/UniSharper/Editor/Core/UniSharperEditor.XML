<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UniSharperEditor</name>
    </assembly>
    <members>
        <member name="T:UniSharperEditor.AboutWindow">
            <summary>
            Displays the about information.
            </summary>
            <seealso cref="T:UnityEditor.EditorWindow"/>
        </member>
        <member name="F:UniSharperEditor.AboutWindow.MenuItemPriority">
            <summary>
            The menu item priority.
            </summary>
        </member>
        <member name="T:UniSharperEditor.AddScenesInBuildWindow">
            <summary>
            Displays the window for adding scenes in build.
            </summary>
            <seealso cref="T:UnityEditor.EditorWindow"/>
        </member>
        <member name="T:UniSharperEditor.AutoSave">
            <summary>
            <see cref="T:UniSharperEditor.AutoSave"/> to implement the feature of saving current opening scene automatically.
            </summary>
            <seealso cref="T:ReSharp.Patterns.Singleton`1"/>
        </member>
        <member name="F:UniSharperEditor.AutoSave.ConfigSection">
            <summary>
            The configuration section.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.askWhenSaving">
            <summary>
            Whether to show confirm dialog when autosave.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.autoSaveTimeMinutes">
            <summary>
            The time interval after which to autosave.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.autosaveTimer">
            <summary>
            The timer of autosave.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.initialized">
            <summary>
            Whether initialize is complete.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.isAutoSaveAssetsEnabled">
            <summary>
            Whether to save assets automatically.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.isAutoSaveEnabled">
            <summary>
            Whether to enable AutoSave feature.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.isAutoSaveScenesEnabled">
            <summary>
            Whether to auto save scenes.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.isDirty">
            <summary>
            Whether the data is dirty.
            </summary>
        </member>
        <member name="M:UniSharperEditor.AutoSave.#cctor">
            <summary>
            Initializes static members of the <see cref="T:UniSharperEditor.AutoSave"/> class.
            </summary>
        </member>
        <member name="M:UniSharperEditor.AutoSave.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:UniSharperEditor.AutoSave"/> class from being created.
            </summary>
        </member>
        <member name="P:UniSharperEditor.AutoSave.AskWhenSaving">
            <summary>
            Gets or sets a value indicating whether [show confirm dialog].
            </summary>
            <value><c>true</c> if [show confirm dialog]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UniSharperEditor.AutoSave.AutoSaveTimeMinutes">
            <summary>
            Gets or sets the automatic save time minutes.
            </summary>
            <value>The automatic save time minutes.</value>
        </member>
        <member name="P:UniSharperEditor.AutoSave.IsAutoSaveAssetsEnabled">
            <summary>
            Gets or sets a value indicating whether it is automatic save assets enabled.
            </summary>
            <value><c>true</c> if it is automatic save assets enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UniSharperEditor.AutoSave.IsAutoSaveEnabled">
            <summary>
            Sets a value indicating whether to enable AutoSave feature.
            </summary>
            <value><c>true</c> if the feature of AutoSave is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UniSharperEditor.AutoSave.IsAutoSaveScenesEnabled">
            <summary>
            Gets or sets a value indicating whether it is automatic save scenes enabled.
            </summary>
            <value><c>true</c> if it is automatic save scenes enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:UniSharperEditor.AutoSave.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:UniSharperEditor.AutoSave.AutoSaveProject">
            <summary>
            Save project automatically.
            </summary>
        </member>
        <member name="M:UniSharperEditor.AutoSave.OnAutosaveTimerCompleted(System.Object,System.EventArgs)">
            <summary>
            Called when timer completed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the timer event data.</param>
        </member>
        <member name="M:UniSharperEditor.AutoSave.OnAutosaveTimerTicking(System.Object,UniSharper.Timers.TimerTickingEventArgs)">
            <summary>
            Called when timer is ticking.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">
            The <see cref="T:UniSharper.Timers.TimerTickingEventArgs"/> instance containing the timer event data.
            </param>
        </member>
        <member name="T:UniSharperEditor.AutoSave.TextStyles">
            <summary>
            The collections of text <see cref="T:UnityEngine.GUIContent"/> s.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.TextStyles.AskWhenSavingStyle">
            <summary>
            The style of property askWhenSaving.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.TextStyles.FrequencyInMinutesStyle">
            <summary>
            The style of property frequencyInMinutes.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.TextStyles.IsAutoSaveAssetsEnabledStyle">
            <summary>
            The style of property isAutoSaveAssetsEnabled.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.TextStyles.IsAutoSaveEnabledStyle">
            <summary>
            The style of property isAutoSaveEnabled.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.TextStyles.IsAutoSaveScenesEnabledStyle">
            <summary>
            The style of property isAutoSaveScenesEnabled.
            </summary>
        </member>
        <member name="T:UniSharperEditor.AutoSave.ConfigKeys">
            <summary>
            Class contains all config keys.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.ConfigKeys.AskWhenSavingKey">
            <summary>
            The key of config parameter "askWhenSaving".
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.ConfigKeys.AutoSaveTimeMinutesKey">
            <summary>
            The key of config parameter "autoSaveTimeMinutes".
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.ConfigKeys.IsAutoSaveAssetsEnabledKey">
            <summary>
            The key of config parameter "isAutoSaveAssetsEnabled".
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.ConfigKeys.IsAutoSaveEnabledKey">
            <summary>
            The key of config parameter "isAutoSaveEnabled".
            </summary>
        </member>
        <member name="F:UniSharperEditor.AutoSave.ConfigKeys.IsAutoSaveScenesEnabledKey">
            <summary>
            The key of config parameter "isAutoSaveScenesEnabled".
            </summary>
        </member>
        <member name="T:UniSharperEditor.EditorConfig">
            <summary>
            <see cref="T:UniSharperEditor.EditorConfig"/> to load and save configuration for editor.
            </summary>
        </member>
        <member name="T:UniSharperEditor.EditorInitializationOrderManager">
            <summary>
            Class for managing editor scripts initialization order.
            </summary>
        </member>
        <member name="F:UniSharperEditor.EditorInitializationOrderManager.loadedTypes">
            <summary>
            The loaded types.
            </summary>
        </member>
        <member name="M:UniSharperEditor.EditorInitializationOrderManager.#cctor">
            <summary>
            Initializes static members of the <see cref="T:UniSharperEditor.EditorInitializationOrderManager"/> class.
            </summary>
        </member>
        <member name="P:UniSharperEditor.EditorInitializationOrderManager.LoadedTypes">
            <summary>
            Gets the loaded types.
            </summary>
            <value>The loaded types.</value>
        </member>
        <member name="T:UniSharperEditor.EditorInitializationOrderManager.InitializationOrderComparer">
            <summary>
            The comparer of initialization order.
            </summary>
            <seealso cref="T:System.Collections.Generic.IComparer`1"/>
        </member>
        <member name="M:UniSharperEditor.EditorInitializationOrderManager.InitializationOrderComparer.Compare(System.Type,System.Type)">
            <summary>
            Compares the specified x with y.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            A signed integer that indicates the relative values of x and y, as shown in the
            following table.
            </returns>
        </member>
        <member name="T:UniSharperEditor.EnumFlagsFieldDrawer">
            <summary>
            Property drawer for <see cref="T:UniSharper.EnumFlagsFieldAttribute"/>.
            </summary>
            <seealso cref="T:UnityEditor.PropertyDrawer"/>
        </member>
        <member name="M:UniSharperEditor.EnumFlagsFieldDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            Override this method to make your own GUI for the property.
            </summary>
            <param name="position">Rectangle on the screen to use for the property GUI.</param>
            <param name="property">The SerializedProperty to make the custom GUI for.</param>
            <param name="label">The label of this property.</param>
        </member>
        <member name="M:UniSharperEditor.EnumFlagsFieldDrawer.GetBaseProperty``1(UnityEditor.SerializedProperty)">
            <summary>
            Gets the base property.
            </summary>
            <typeparam name="T">The Type definition of property.</typeparam>
            <param name="property">The property.</param>
            <returns>The property with Type definition.</returns>
        </member>
        <member name="T:UniSharperEditor.PreferencesWindow">
            <summary>
            Displays the preference options.
            </summary>
            <seealso cref="T:UnityEditor.EditorWindow"/>
        </member>
        <member name="M:UniSharperEditor.PreferencesWindow.ShowPreferencesWindow">
            <summary>
            Shows the preferences window.
            </summary>
        </member>
        <member name="T:UniSharperEditor.Rendering.LightingGenerationWindow">
            <summary>
            Displays the window for generating lightmap for adding scenes.
            </summary>
            <seealso cref="T:UnityEditor.EditorWindow"/>
        </member>
        <member name="T:UniSharperEditor.Rendering.Lightmapping">
            <summary>
            The class <see cref="T:UniSharperEditor.Rendering.Lightmapping"/> provides menu items to bake lightmaps.
            </summary>
        </member>
        <member name="M:UniSharperEditor.Rendering.Lightmapping.#cctor">
            <summary>
            Initializes static members of the <see cref="T:UniSharperEditor.Rendering.Lightmapping"/> class.
            </summary>
        </member>
        <member name="M:UniSharperEditor.Rendering.Lightmapping.BakePrefabLightmaps">
            <summary>
            Bakes the prefab lightmaps.
            Note: Before building, you need to setup Shader stripping under the menu "Edit -&gt;
                  Project Settings -&gt; Graphics", Set "Lightmap Modes" to "Manual' and uncheck
                  "Realtime Non-Directional" and "Realtime Directional".
            </summary>
        </member>
        <member name="M:UniSharperEditor.Rendering.Lightmapping.BakePrefabLightmaps(UniSharper.Rendering.PrefabLightmapData[])">
            <summary>
            Bakes the prefab lightmaps.
            </summary>
            <param name="prefabs">The <see cref="!:Array"/> of <see cref="T:UniSharper.Rendering.PrefabLightmapData"/>.</param>
        </member>
        <member name="M:UniSharperEditor.Rendering.Lightmapping.GenerateLightmapInfo(UnityEngine.GameObject,System.Collections.Generic.List{UniSharper.Rendering.LightmapRendererInfo},System.Collections.Generic.List{UnityEngine.Texture2D},System.Collections.Generic.List{UnityEngine.Texture2D},System.Collections.Generic.List{UnityEngine.Texture2D})">
            <summary>
            Generates the lightmap information.
            </summary>
            <param name="gameObject">The <see cref="T:UnityEngine.GameObject"/>.</param>
            <param name="rendererInfos">
            The <see cref="T:System.Collections.Generic.List`1"/> to store renderer information.
            </param>
            <param name="lightmapColors">The <see cref="T:System.Collections.Generic.List`1"/> to store <see cref="P:UnityEngine.LightmapData.lightmapColor"/>.</param>
            <param name="lightmapDirs">The <see cref="T:System.Collections.Generic.List`1"/> to store <see cref="P:UnityEngine.LightmapData.lightmapDir"/>.</param>
            <param name="shadowMasks">The <see cref="T:System.Collections.Generic.List`1"/> to store <see cref="P:UnityEngine.LightmapData.shadowMask"/>.</param>
        </member>
        <member name="M:UniSharperEditor.Rendering.Lightmapping.MakeSureRendererGameObjectIsLightmapStatic(UniSharper.Rendering.PrefabLightmapData[])">
            <summary>
            Make sure the <see cref="T:UnityEngine.GameObject"/> of renderer is lightmap static.
            </summary>
            <param name="prefabs">The <see cref="!:Array"/> of <see cref="T:UniSharper.Rendering.PrefabLightmapData"/>.</param>
        </member>
        <member name="M:UniSharperEditor.Rendering.Lightmapping.OnLightmappingCompleted">
            <summary>
            Called when lightmap generating completed.
            </summary>
        </member>
        <member name="M:UniSharperEditor.Rendering.Lightmapping.ValidatePrefabLightmapsBaking">
            <summary>
            Validates the prefab lightmaps baking.
            </summary>
            <returns>
            <c>true</c> if got <see cref="T:UniSharper.Rendering.PrefabLightmapData"/> component in open scenes,
            <c>false</c> otherwise.
            </returns>
        </member>
        <member name="T:UniSharperEditor.InitializeOnEditorStartupAttribute">
            <summary>
            Allow an editor class to be initialized when Unity loads without action from the user.
            </summary>
            <seealso cref="T:System.Attribute"/>
        </member>
        <member name="M:UniSharperEditor.InitializeOnEditorStartupAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:UniSharperEditor.InitializeOnEditorStartupAttribute"/> class.
            </summary>
            <param name="executionOrder">The execution order.</param>
        </member>
        <member name="P:UniSharperEditor.InitializeOnEditorStartupAttribute.ExecutionOrder">
            <summary>
            Gets the execution order.
            </summary>
            <value>The execution order.</value>
        </member>
        <member name="T:UniSharperEditor.ReadOnlyFieldDrawer">
            <summary>
            Property drawer for <see cref="T:UniSharper.ReadOnlyFieldAttribute"/>.
            </summary>
            <seealso cref="T:UnityEditor.PropertyDrawer"/>
        </member>
        <member name="M:UniSharperEditor.ReadOnlyFieldDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            Override this method to make your own GUI for the property.
            </summary>
            <param name="position">Rectangle on the screen to use for the property GUI.</param>
            <param name="property">The SerializedProperty to make the custom GUI for.</param>
            <param name="label">The label of this property.</param>
        </member>
        <member name="T:UniSharperEditor.AssetUtility">
            <summary>
            This class provides some useful asset utilities.
            </summary>
        </member>
        <member name="F:UniSharperEditor.AssetUtility.SceneAssetExtension">
            <summary>
            The extension of Scene asset.
            </summary>
        </member>
        <member name="M:UniSharperEditor.AssetUtility.IsSceneAsset(System.String)">
            <summary>
            Determines whether the asset by the path is a scene asset.
            </summary>
            <param name="path">The path of the asset.</param>
            <returns><c>true</c> if it is a scene asset; otherwise, <c>false</c>.</returns>
            <exception cref="!:ArgumentNullException"><c>path</c> is <c>null</c>.</exception>
        </member>
        <member name="T:UniSharperEditor.PrefabUtil">
            <summary>
            This class provides some useful prefab utilities.
            </summary>
        </member>
        <member name="M:UniSharperEditor.PrefabUtil.SavePrefab(UnityEngine.GameObject,UnityEditor.ReplacePrefabOptions)">
            <summary>
            Saves the prefab.
            </summary>
            <param name="source">The original <see cref="T:UnityEngine.GameObject"/>.</param>
            <param name="options">The options.</param>
            <returns>The prefab game object after it has been created.</returns>
        </member>
        <member name="T:UniSharperEditor.Timers.EditorTimer">
            <summary>
            Base implementation of interface <see cref="T:UniSharper.Timers.ITimer"/> for Editor.
            </summary>
            <seealso cref="T:UniSharper.Timers.Timer"/>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimer.#ctor(System.Single,System.UInt32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:UniSharperEditor.Timers.EditorTimer"/> class.
            </summary>
            <param name="interval">
            The time, in seconds, between <see cref="E:UniSharper.Timers.Timer.Ticking"/> events.
            </param>
            <param name="repeatCount">The repeat count.</param>
            <param name="autoStart">
            if set to <c>true</c> invoke the method <see cref="M:UniSharper.Timers.Timer.Start"/> automatically.
            </param>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimer.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only
            unmanaged resources.
            </param>
        </member>
        <member name="T:UniSharperEditor.Timers.EditorTimerManager">
            <summary>
            The <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/> is a convenience class for managing editor timers. This
            class cannot be inherited.
            </summary>
            <seealso cref="!:SingletonBase&lt;EditorTimerManager&gt;"/>
            <seealso cref="!:ITimerCollection"/>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimerManager.#cctor">
            <summary>
            Initializes static members of the <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/> class.
            </summary>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimerManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/> class from being created.
            </summary>
        </member>
        <member name="P:UniSharperEditor.Timers.EditorTimerManager.Count">
            <summary>
            Gets the number of <see cref="T:UniSharper.Timers.ITimer"/> contained in this <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/>.
            </summary>
            <value>The number of <see cref="T:UniSharper.Timers.ITimer"/> contained in this <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/>.</value>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimerManager.Add(UniSharper.Timers.ITimer)">
            <summary>
            Adds an <see cref="T:UniSharper.Timers.ITimer"/> item to this <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/>.
            </summary>
            <param name="timer">The <see cref="T:UniSharper.Timers.ITimer"/> to add.</param>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimerManager.Clear">
            <summary>
            Removes all <see cref="T:UniSharper.Timers.ITimer"/> contained in this <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/>.
            </summary>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimerManager.Contains(UniSharper.Timers.ITimer)">
            <summary>
            Determines whether the specified <see cref="T:UniSharper.Timers.ITimer"/> contained in this <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/>.
            </summary>
            <param name="timer">The <see cref="T:UniSharper.Timers.ITimer"/> to locate.</param>
            <returns>
            <c>true</c> if <see cref="T:UniSharper.Timers.ITimer"/> is found in this <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimerManager.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimerManager.Remove(UniSharper.Timers.ITimer)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:UniSharper.Timers.ITimer"/> from this <see cref="T:UniSharperEditor.Timers.EditorTimerManager"/>.
            </summary>
            <param name="timer">The <see cref="T:UniSharper.Timers.ITimer"/> to be removed.</param>
            <returns>
            <c>true</c> if <see cref="T:UniSharper.Timers.ITimer"/> was successfully removed from this <see
            cref="T:UniSharperEditor.Timers.EditorTimerManager"/>; otherwise, <c>false</c>. This method also returns
            <c>false</c> if the specified <see cref="T:UniSharper.Timers.ITimer"/> is not found.
            </returns>
        </member>
        <member name="M:UniSharperEditor.Timers.EditorTimerManager.OnEditorUpdate">
            <summary>
            Called when Unity editor update.
            </summary>
        </member>
    </members>
</doc>
